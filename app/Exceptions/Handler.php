<?php

namespace App\Exceptions;

use App\Http\Traits\HandleApi;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Database\QueryException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Response;
use Illuminate\Validation\ValidationException;
use Throwable;


class Handler extends ExceptionHandler
{
    use HandleApi;

    public function render($request, Throwable $e): Response|JsonResponse|\Symfony\Component\HttpFoundation\Response
    {
        if ($request->is('api/*')) {

            if ($e instanceof ModelNotFoundException) {
                $model = explode('\\' , $e->getModel())[2];
                return $this->sendError('Model is not found',  $model . ' is not found');
            }

            if ($e instanceof AuthorizationException) {
                return $this->sendError('AuthorizationException', $e->getMessage());
            }

            if ($e instanceof AuthenticationException) {
                return $this->sendError('AuthenticationException', $e->getMessage());
            }

            if ($e instanceof ValidationException) {
                $error = $e->validator->errors()->first();

                return $this->sendError('Validation Exception',$error);
            }

            if ($e instanceof QueryException){
                return $this->sendError('QueryException',$e->getMessage());
            }
            return $this->sendError('Server Error' , $e->getMessage());
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
